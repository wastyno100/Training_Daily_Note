절차지향 C -> 문법적 규칙 순서대로 작동

object 객체 -> 연동
클래스, 객체, 인스턴스, 인터페이스, 다향성, 상승, 축상화 기타 등등

db에서 a1테이블의 pk를 a2테이블 fk로 가져오는것처럼 상속관계(부모자식)
같은 패키지 내에 있는것을 끌어다 쓸 수 있다. (import로 다른 패키지도 가져올수 있음)

클래스 > 객체
객체가 자료라고 한다면 클래스는 자료의 집합이다.


[자바]
	import ListMap.*; // 다른 패키지에 있는 것을 전부 땡겨옴 (ListMap 이라는 패키지)
	
	class name {
    String name = ""; //객체변수 라고 한다.
}
	public static void main(String[] args) { // 상속 받는다.
            name human = new name();
            name cat = new name();
            name dog = new name();
	}
	
	
	// Public class의 이름은 자바의 파일명과 똑같이 해야 함. 그러므로 파일 하나 당 public은 하나
	// 하나의 파일당 class는 하나만 만드는게 좋다.
	
	
	(메서드)
		Java 함수, 메서드는 공존한다. 이름을 구별시켜야 한다.
		중복 이름을 갖을 수 없다.
		메서드의 사용이유: 반복작업 회피
		return -> 결과 반환하는 메소드
		retutn이 없을경우 void를 사용 해야 출력이 가능
		인스턴스란? 객체지향에서 Class 기반으로 객체를 만드는 과정
	
	-종류-
		입력 출력 모두 있는
		입력 출력 모두 없는
		입력 없고 출력만 있는
		입력 있고 출력이 없는